---
title: "Workshop MOD: Visualisation de données omiques avec R"
---

# Introduction 

# Données

Les données qu'on utilisera dans ce Workshop se trouvent dans la librairie *OmicCircos* de R.
Elles se basent sur des bases de données fournies par ***The Cancer Genome Atlas Program*** (TCGA). On s'intéresse aux données des patients diagnostiqués d'un cancer du sein. Voici la liste des tableaux utilisés :

* TCGA.BC.cnv.2k.60 : Les variables dans ce tableau sont respectivement le chromosome, sa position et le nom du gène observé et les 60 autres variables représentent 60 individus différents.

* TCGA.BC.fus : Ce tableau représente la fusion des deux gènes qui a eu place pour un individu préci.

![Extrait du tableau fus](./images/tableau%20fus.png)

* TCGA.BC.gene.exp.2k.60 : Sur 60 individus, on étudie une métrique en rapport avec l'expression du gène. Le chromosome, sa position et le nom du gène observé sont notés.

* TCGA.BC.sample60 : On indique ici pour 60 cas quel type de cancer du sein le patient en souffre : LumA, LumB, Basal ou Her2.

* TCGA.BC_Her2_cnv_exp : Dans ce tableau, des tests statistiques sont effectués et on récupère la *t-value* et la *p-value*. On note les métriques FDR et Bonferroni de plus.

* TCGA.PAM50_genefu_hg18 : Il s'agit alors d'un ensemble de 50 gènes qui ont été identifiés comme une signature d'expression génique associée aux sous-types du cancer du sein (LumA, LumB, Basal, Her2 ou Normal) en fonction des schémas d'expression génique.


![Extrait du tableau CNV](./images/Extrait%20PAM50.png)


# Recueillir les données

Afin de pouvoir mettre en oeuvre les différentes méthodes de visualisation, il nous faut tout d'abord recueillir les données et les travailler.

Pour cela, suivez les étapes présentées ci-dessous :

-   Etape 1 : Chargement de la librairie "Omiccircos"

```{r}
library(OmicCircos)
```

-   Etape 2 : Importation des données

```{r}
data("TCGA.PAM50_genefu_hg18")
data("TCGA.BC.fus")
data("TCGA.BC.cnv.2k.60")
data("TCGA.BC.gene.exp.2k.60")
data("TCGA.BC.sample60")
data("TCGA.BC_Her2_cnv_exp")
```

-   Etape 3 : Travail des données

```{r}
Her2.i = which(TCGA.BC.sample60[,2] == "Her2")
Her2.n = TCGA.BC.sample60[Her2.i,1]
Her2.j = which(colnames(TCGA.BC.cnv.2k.60)%in%Her2.n)
cnv = TCGA.BC.cnv.2k.60[,c(1:3,Her2.j)]

cnv.m = cnv[,c(4:ncol(cnv))]
cnv.m[cnv.m > 2] = 2
cnv.m[cnv.m < -2] = -2
cnv = cbind(cnv[,1:3], cnv.m)

Her2.j = which(colnames(TCGA.BC.gene.exp.2k.60)%in% Her2.n)

gene.exp = TCGA.BC.gene.exp.2k.60[,c(1:3,Her2.j)]
``` 

# Visualisations classiques

L'ensemble des visualisations ci-dessous s'appuient sur la base de données *TCGA.PAM50_genefu_hg18*.

```{r, include=FALSE}
#|echo: false
#|output: false
#|warning: false

# chargement des packages nécessaires
library(ggplot2)
library(dplyr)
library(viridis)
library(viridisLite)
library(hrbrthemes)

# chargement des données
data("TCGA.PAM50_genefu_hg18")
```
# Code commenté
```{r}
# Charger le package OmicCircos
library(OmicCircos)

# Charger les données à partir du package OmicCircos, provenant d'analyses génomiques du cancer du sein
data("TCGA.PAM50_genefu_hg18")
data("TCGA.BC.fus")
data("TCGA.BC.cnv.2k.60")
data("TCGA.BC.gene.exp.2k.60")
data("TCGA.BC.sample60")
data("TCGA.BC_Her2_cnv_exp")

# Calculer les valeurs -log10 des p-values associées au sous-type Her2
pvalue <- -1 * log10(TCGA.BC_Her2_cnv_exp[,5])
pvalue <- cbind(TCGA.BC_Her2_cnv_exp[,c(1:3)], pvalue)

# Identifier les échantillons du sous-type Her2
Her2.i <- which(TCGA.BC.sample60[,2] == "Her2")
Her2.n <- TCGA.BC.sample60[Her2.i,1]

# Extraire les données CNV associées au sous-type Her2
Her2.j <- which(colnames(TCGA.BC.cnv.2k.60) %in% Her2.n)
cnv <- TCGA.BC.cnv.2k.60[,c(1:3,Her2.j)]


```

```{r, include=FALSE}
#|echo: false
#|output: false
#|warning: false

# Charger le package OmicCircos
library(OmicCircos)

# Charger les données à partir du package OmicCircos, provenant d'analyses génomiques du cancer du sein
data("TCGA.PAM50_genefu_hg18")
data("TCGA.BC.fus")
data("TCGA.BC.cnv.2k.60")
data("TCGA.BC.gene.exp.2k.60")
data("TCGA.BC.sample60")
data("TCGA.BC_Her2_cnv_exp")

# Calculer les valeurs -log10 des p-values associées au sous-type Her2
pvalue <- -1 * log10(TCGA.BC_Her2_cnv_exp[,5])
pvalue <- cbind(TCGA.BC_Her2_cnv_exp[,c(1:3)], pvalue)

# Identifier les échantillons du sous-type Her2
Her2.i <- which(TCGA.BC.sample60[,2] == "Her2")
Her2.n <- TCGA.BC.sample60[Her2.i,1]

# Extraire les données CNV associées au sous-type Her2
Her2.j <- which(colnames(TCGA.BC.cnv.2k.60) %in% Her2.n)
cnv <- TCGA.BC.cnv.2k.60[,c(1:3,Her2.j)]

# Ajuster les valeurs CNV pour rendre la visualisation plus claire
cnv.m <- cnv[,c(4:ncol(cnv))]
cnv.m[cnv.m > 2] <- 2
cnv.m[cnv.m < -2] <- -2
cnv <- cbind(cnv[,1:3], cnv.m)

# Extraire les données d'expression génique associées au sous-type Her2
Her2.j <- which(colnames(TCGA.BC.gene.exp.2k.60) %in% Her2.n)
gene.exp <- TCGA.BC.gene.exp.2k.60[,c(1:3,Her2.j)]

# Générer une palette de couleurs pour la visualisation
colors <- rainbow(10, alpha = 0.5)

# Sauvegarder la sortie dans un fichier PDF
pdf("OmicCircos4vignette10_paper1.pdf", 8, 8)

# Plot 1: Représentation des chromosomes
par(mar = c(2, 2, 2, 2))
plot(c(1, 800), c(1, 800), type = "n", axes = FALSE, xlab = "", ylab = "", main = "")
zoom <- c(1, 22, 939245.5, 154143883, 0, 180)
circos(R = 400, cir = "hg18", W = 4, type = "chr", print.chr.lab = TRUE, scale = TRUE, zoom = zoom)

# Plot 2: Représentation de l'expression génique (heatmap)
circos(R = 300, cir = "hg18", W = 100, mapping = gene.exp, col.v = 4, type = "heatmap2", cluster = FALSE, col.bar = TRUE, lwd = 0.01, zoom = zoom)

# Plot 3: Représentation de la copie numérique (CNV)
circos(R = 220, cir = "hg18", W = 80, mapping = cnv, col.v = 4, type = "ml3", B = FALSE, lwd = 1, cutoff = 0, zoom = zoom)
# Explication biologique des CNV
## Les CNV (Copy Number Variations) désignent des variations dans le nombre de copies d'une séquence spécifique d'ADN observées entre les individus d'une même espèce, incluant les humains.

# Plot 4: Représentation des p-values associées au sous-type Her2
circos(R = 140, cir = "hg18", W = 80, mapping = pvalue, col.v = 4, type = "l", B = TRUE, lwd = 1, col = colors[1], zoom = zoom)
# Explication biologique des p-values
## Les p-values sont utilisées pour évaluer la signification statistique des résultats. Dans ce contexte, elles peuvent indiquer des variations significatives associées au sous-type Her2.

# Plot 5: Représentation des fusions géniques
circos(R = 130, cir = "hg18", W = 10, mapping = TCGA.BC.fus, type = "link", lwd = 2, zoom = zoom)

# Zoom sur certaines régions spécifiques(le zoom sur les liens facilite l'exploration ciblée des régions génomiques où des fusions géniques sont suspectées, permettant ainsi une analyse plus approfondie et une meilleure compréhension des implications biologiques de ces événements.)
## Zoom sur le premier lien
highlight.link1 <- c(400, 400, 140, 376.8544, 384.0021, 450, 540.5)
circos(cir = "hg18", mapping = highlight.link1, type = "highlight.link", col = colors[1], lwd = 1)
## Zoom sur le deuxième lien
highlight.link2 <- c(400, 400, 140, 419.1154, 423.3032, 543, 627)
circos(cir = "hg18", mapping = highlight.link2, type = "highlight.link", col = colors[6], lwd = 1)

# Plot 6: Zoom sur le chromosome 11
zoom <- c(11, 11, 282412.5, 133770314.5, 180, 270)
circos(R = 400, cir = "hg18", W = 4, type = "chr", print.chr.lab = TRUE, scale = TRUE, zoom = zoom)
circos(R = 300, cir = "hg18", W = 100, mapping = gene.exp, col.v = 4, type = "heatmap2", cluster = FALSE, lwd = 0.01, zoom = zoom)
circos(R = 220, cir = "hg18", W = 80, mapping = cnv, col.v = 4, type = "ml3", B = FALSE, lwd = 1, cutoff = 0, zoom = zoom)
circos(R = 140, cir = "hg18", W = 80, mapping = pvalue, col.v = 4, type = "l", B = TRUE, lwd = 1, col = colors[1], zoom = zoom)

# Plot 7: Zoom sur le chromosome 17
zoom <- c(17, 17, 739525, 78385909, 274, 356)
circos(R = 400, cir = "hg18", W = 4, type = "chr", print.chr.lab = TRUE, scale = TRUE, zoom = zoom)
circos(R = 300, cir = "hg18", W = 100, mapping = gene.exp, col.v = 4, type = "heatmap2", cluster = FALSE, lwd = 0.01, zoom = zoom)
circos(R = 220, cir = "hg18", W = 80, mapping = cnv, col.v = 4, type = "ml3", B = FALSE, lwd = 1, cutoff = 0, zoom = zoom)
circos(R = 140, cir = "hg18", W = 80, mapping = pvalue, col.v = 4, type = "l", B = TRUE, lwd = 1, col = colors[1], zoom = zoom)

# Ajouter des étiquettes de gènes
## Sur le chromosome 11
gene.names <- c("ERBB2", "CDC6")
PAM50.11 <- which(TCGA.PAM50_genefu_hg18[,3] == gene.names)
TCGA.PAM50 <- TCGA.PAM50_genefu_hg18[PAM50.11,]
TCGA.PAM50 <- rbind(TCGA.PAM50, TCGA.PAM50[2,])
TCGA.PAM50[3,1] <- 11
TCGA.PAM50[3,2] <- 69165000
TCGA.PAM50[,3] <- as.character(TCGA.PAM50[,3])
TCGA.PAM50[3,3] <- c("CCND1")
circos(R = 410, cir = "hg18", W = 40, mapping = TCGA.PAM50, type = "label", side = "out", col = "blue", zoom = zoom)

## Sur le chromosome 17
gene.names <- c("ERBB2", "CDC6")
PAM50.17 <- which(TCGA.PAM50_genefu_hg18[,3] == gene.names)
TCGA.PAM50 <- TCGA.PAM50_genefu_hg18[PAM50.17,]
TCGA.PAM50 <- rbind(TCGA.PAM50, TCGA.PAM50[2,])
TCGA.PAM50[3,1] <- 17
TCGA.PAM50[3,2] <- 69165000
TCGA.PAM50[,3] <- as.character(TCGA.PAM50[,3])
TCGA.PAM50[3,3] <- c("CCND1")
circos(R = 410, cir = "hg18", W = 40, mapping = TCGA.PAM50, type = "label", side = "out", col = "blue", zoom = zoom)

# Fermer le fichier PDF
dev.off()
```

 

### Comparaison de Deux Densités

Commençons par étudier quelques densités des types de cancer. Voici un exemple très basique de visualisation graphique de la **comparaison des densités des types de cancer *LumA* et *LumB*** :

```{r}
# création de la base de données
data <- data.frame(value = c(TCGA.PAM50_genefu_hg18$LumA,
                            TCGA.PAM50_genefu_hg18$LumB),
                   type = c(rep("LumA", 50),
                            rep("LumB", 50)))

# création du graphe
comparaison <- data %>%
    ggplot(aes(x=value, fill=type)) +
    geom_density()

# affichage du graphe
print(comparaison)
```

::: {.callout-important appearance="simple"}
L'utilisation de *ggplot* nécessite la création d'une base de données contenant les variables utiles pour le graphe.
:::

::: {.callout-note appearance="simple"}
## %>%
Cet opérateur est un pipe, fréquemment représenté par une barre verticale ‘|’ : il renvoie la sortie d’une commande vers l’entrée d’une autre.
:::

De nombreuses options de *ggplot* peuvent améliorer l'apparence générale de ce graphe telles que ci-dessous.

```{r}
# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkblue", "pink")) +
  scale_fill_manual(values = c("darkblue", "pink")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```

Il est également possible de représenter les densités sur deux graphes différents plutôt que de les superposer.

```{r}
# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkblue", "pink")) +
  scale_fill_manual(values = c("darkblue", "pink")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  facet_wrap(~type, scales = "fixed")+
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```

::: {.callout-tip appearance="simple"}
## Utilisation de *facet_wrap*
Les échelles des différents graphiques peuvent être formatées différemment à l'aide de l'option *scales* :
*"fixed"* permet d'obtenir des échelles égales pour tous les graphes mais d'autres options telles que *"free_x"*, *"free_y"* ou *"free"* sont envisageables.
:::

Le cancer de type *Her2* est le type de cancer le plus courant parmi tous ceux présents dans la base de données support.

**En vous appuyant sur l'exemple précédent, représentez graphiquement la comparaison des densités d'une personne atteinte d'un cancer de type *Her2* et d'une personne saine.**

::: {.callout-tip appearance="simple"}
Les données d'une personne saine sont contenues dans la variable *Normal* de la base de données.
:::

Par la suite, les couleurs utilisées pour la représentation de *Her2* et *Normal* seront respectivement *darkred* et *darksalmon*.

```{r}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: false

# création de la base de données
data <- data.frame(value = c(TCGA.PAM50_genefu_hg18$Her2,
                            TCGA.PAM50_genefu_hg18$Normal),
                   type = c(rep("Her2", 50),
                            rep("Normal", 50)))

# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkred", "darksalmon")) +
  scale_fill_manual(values = c("darkred", "darksalmon")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```

### Comparaison de Toutes les Densités

**Pour mieux visualiser les différences entre les types de cancer, représentez la comparaison de la densité de l'ensemble des types de cancer.**

::: {.callout-important appearance="simple"}
Il est important de préciser au graphe que la variable doit être considéré comme une densité à l'aide de la commande *aes(y=after_stat(density))*.
:::

```{r}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: true

# création de la base de données pour le graphe
data <- data.frame(type = c(rep("LumA", 50),
                            rep("LumB", 50),
                            rep("Basal", 50),
                            rep("Her2", 50),
                            rep("Normal", 50)),
                  subtype = rep(TCGA.PAM50_genefu_hg18$chr, each = 50),
                  value = c(TCGA.PAM50_genefu_hg18$LumA,
                            TCGA.PAM50_genefu_hg18$LumB,
                            TCGA.PAM50_genefu_hg18$Basal,
                            TCGA.PAM50_genefu_hg18$Her2,
                            TCGA.PAM50_genefu_hg18$Normal))

# histogramme et densité des différents types de cancer
density <- data %>%
  ggplot(aes(x = value, fill = type)) +
  geom_density(aes(y = after_stat(density), color=type), linewidth=0.5, alpha=0.4, fill=NA) +
  scale_color_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  scale_fill_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  labs(title = "Density of Cancer Types", color = "Cancer Type")

# affichage du graphe
print(density)
```

**Ajoutez les histogrammes respectifs des différents types de cancer sur le graphe précédent.**

::: {.callout-tip appearance="simple"}
## geom_histogram
Cette commande du package *ggplot2* permet de créer des histogrammes sur R. De nombreuses options sont disponibles comme color, alpha (règle la transparence du remplissage), binwidth (règle la largeur des intervalles)
et position = "identity", "dodge" (règle la position des bandes).
:::

```{r}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: true

# histogramme et densité des différents types de cancer
density <- data %>%
  ggplot(aes(x = value, fill = type)) +
  geom_histogram(aes(y=after_stat(density)), color = "#e9ecef", alpha = 0.3, binwidth=0.5, position = "dodge") +
  geom_density(aes(y = after_stat(density), color=type), linewidth=0.5, fill=NA) +
  scale_color_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  scale_fill_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  labs(fill = "Cancer Type") +
  xlab("") +
  ylab("Density") +
  labs(title = "Density of Cancer Type") +
  guides(color = "none")

# affichage du graphe
print(density)
```


### Fréquence des Gènes sur l'Ensemble des Chromosomes

**En appliquant les compétences acquises jusqu'ici, représentez la fréquence des gènes de *Her2* sous forme d'histogrammes et de densités pour chacun des chromosomes.**

```{r, warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: true
#| warning: false
#| message: false


# création de la base de données pour le graphe
data <- data.frame(
  type = TCGA.PAM50_genefu_hg18$chr,
  value = TCGA.PAM50_genefu_hg18$Her2
)

# histogramme de fréquence pour chaque chromosome
frequence <- data %>%
  ggplot(aes(x = value, bins=30, color = type, fill = type)) +
  geom_histogram(alpha = 0.6, position = "identity") +
  geom_density(aes(y=after_stat(ndensity)), alpha = 0.5, fill = "grey", color = "black", linewidth = 0.25) +
  scale_fill_viridis(discrete = FALSE) +
  scale_color_viridis(discrete = FALSE) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Chromosome") +
  ylab("Assigned Probability (%)") +
  facet_wrap(~type, scales = "fixed", nrow=3)+
  guides(color = "none", fill="none") +
  labs(title = "Frequency of Her2 Gene Occurrence on All Chromosomes")

# affichage du graphe
print(frequence)
```

**De la même façon que le graphe précédent, représentez graphiquement la fréquence des gènes de chaque type de cancer sous forme d'histogrammes et de densités pour chacun des chromosomes.**

```{r, warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: true
#| warning: false
#| error: false

# création de la base de données pour le graphe
data <- data.frame(type = TCGA.PAM50_genefu_hg18$chr,
                   subtype = c(rep("LumA", 50),
                               rep("LumB", 50),
                               rep("Basal", 50),
                               rep("Her2", 50),
                               rep("Normal", 50)),
                   value = c(TCGA.PAM50_genefu_hg18$LumA,
                             TCGA.PAM50_genefu_hg18$LumB,
                             TCGA.PAM50_genefu_hg18$Basal,
                             TCGA.PAM50_genefu_hg18$Her2,
                             TCGA.PAM50_genefu_hg18$Normal))

# histogramme de fréquence pour chaque chromosome
frequence <- data %>%
  ggplot(aes(x = value, fill = subtype, color=subtype)) +
  geom_histogram(alpha = 0.6, position = "dodge") +
  geom_density(aes(y=after_stat(ndensity), color = subtype), alpha = 0.25, fill = "grey", size = 0.25) +
  scale_color_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  scale_fill_manual(values = c("#69b3a2", "darkred", "darkblue", "pink", "darksalmon")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Chromosome") +
  ylab("Frequency") +
  facet_wrap(~type, scales = "fixed", nrow=3)+
  guides(color = "none") +
  labs(title = "Frequency of Cancer Type Gene Occurrence on Each Chromosome",
       fill = "Cancer Type")

# affichage du graphe
print(frequence)
```



# Lexique

* *hg18* : La représentation du génome humain a connu plusieurs versions avant d'aboutir à la représentation la plus optimale. La version 18 s'agit de la version avant dernière.

* Her2 : Une protéine naturellement présente dans l’organisme. Il s’agit d’un récepteur transmembranaire impliqué dans la régulation de la prolifération cellulaire.

* LumA : Le cancer du sein Luminal A est l'un des sous-types luminaux et est généralement associé à des caractéristiques moins agressives par rapport à Luminal B.

* LumB : Associé à un grade plus élevé, des taux de prolifération accrus, et un pronostic global plus défavorable.

* Basal : Un sous-type du cancer du sein négatif pour les récepteurs d'oestrogène (ER), les récepteurs de progestérone (PR) et le récepteur 2 du facteur de croissance épidermique humain (HER2). On le désigne souvent comme un cancer du sein triple négatif (TNBC).

* FDR (First Division Restitution) : Réfère à l'évènement où l'une des cellules filles produites lors de la première division méiotique conserve les deux chromatides d'un chromosome, sans subir la séparation normale en deux cellules distinctes. Cela aboutit à un gamète avec un ensemble complet de chromosomes, plutôt que la moitié attendue.

* Bonferroni : Une correction statistique.
