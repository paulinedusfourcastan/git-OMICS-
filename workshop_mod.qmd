---
title: "Workshop MOD"
format: html
---

# Introduction

# Données

Les données qu'on utilisera dans ce Workshop se trouvent dans la librairie *OmicCircos* de R.
Elles se basent sur des bases de données fournies par ***The Cancer Genome Atlas Program*** (TCGA). On s'intéresse aux données des patients diagnostiqués d'un cancer du sein. Voici la liste des tableaux utilisés :

* TCGA.BC.cnv.2k.60 : Les variables dans ce tableau sont respectivement le chromosome, sa position et le nom du gène observé et les 60 autres variables représentent 60 individus différents.

* TCGA.BC.fus : Ce tableau représente la fusion des deux gènes qui a eu place pour un individu préci.

![Extrait du tableau fus](./images/tableau%20fus.png)

* TCGA.BC.gene.exp.2k.60 : Sur 60 individus, on étudie une métrique en rapport avec l'expression du gène. Le chromosome, sa position et le nom du gène observé sont notés.

* TCGA.BC.sample60 : On indique ici pour 60 cas quel type de cancer du sein le patient en souffre : LumA, LumB, Basal ou Her2.

* TCGA.BC_Her2_cnv_exp : Dans ce tableau, des tests statistiques sont effectués et on récupère la *t-value* et la *p-value*. On note les métriques FDR et Bonferroni de plus.

* TCGA.PAM50_genefu_hg18 : Il s'agit alors d'un ensemble de 50 gènes qui ont été identifiés comme une signature d'expression génique associée aux sous-types du cancer du sein (LumA, LumB, Basal, Her2 ou Normal) en fonction des schémas d'expression génique.

# Exemple

```{r}
x <- 3
print(x)
```

```{r}
#|echo: true
#|output: false
x <- 3
print(x)
```

```{r}
#|echo: true
#|code-fold: true
x <- 3
print(x)
```



![Extrait du tableau CNV](./images/Extrait%20PAM50.png)


# Recueillir les données

Afin de pouvoir mettre en oeuvre les différentes méthodes de visualisation, il nous faut tout d'abord recueillir les données et les travailler.

Pour cela, suivez les étapes présentées ci-dessous :

-   Etape 1 : Chargement de la librairie "Omiccircos"

```{r}
library(OmicCircos)
```

-   Etape 2 : Importation des données

```{r}
data("TCGA.PAM50_genefu_hg18")
data("TCGA.BC.fus")
data("TCGA.BC.cnv.2k.60")
data("TCGA.BC.gene.exp.2k.60")
data("TCGA.BC.sample60")
data("TCGA.BC_Her2_cnv_exp") 
```

-   Etape 3 : Travail des données

```{r}
Her2.i = which(TCGA.BC.sample60[,2] == "Her2")
Her2.n = TCGA.BC.sample60[Her2.i,1]
Her2.j = which(colnames(TCGA.BC.cnv.2k.60)%in%Her2.n)
cnv = TCGA.BC.cnv.2k.60[,c(1:3,Her2.j)]

cnv.m = cnv[,c(4:ncol(cnv))]
cnv.m[cnv.m > 2] = 2
cnv.m[cnv.m < -2] = -2
cnv = cbind(cnv[,1:3], cnv.m)

Her2.j = which(colnames(TCGA.BC.gene.exp.2k.60)%in% Her2.n)

gene.exp = TCGA.BC.gene.exp.2k.60[,c(1:3,Her2.j)]
```

# Lexique

* *hg18* : La représentation du génome humain a connu plusieurs versions avant d'aboutir à la représentation la plus optimale. La version 18 s'agit de la version avant dernière.

* Her2 : Une protéine naturellement présente dans l’organisme. Il s’agit d’un récepteur transmembranaire impliqué dans la régulation de la prolifération cellulaire.

* LumA : Le cancer du sein Luminal A est l'un des sous-types luminaux et est généralement associé à des caractéristiques moins agressives par rapport à Luminal B.

* LumB : Associé à un grade plus élevé, des taux de prolifération accrus, et un pronostic global plus défavorable.

* Basal : Un sous-type du cancer du sein négatif pour les récepteurs d'oestrogène (ER), les récepteurs de progestérone (PR) et le récepteur 2 du facteur de croissance épidermique humain (HER2). On le désigne souvent comme un cancer du sein triple négatif (TNBC).

* FDR (First Division Restitution) : Réfère à l'évènement où l'une des cellules filles produites lors de la première division méiotique conserve les deux chromatides d'un chromosome, sans subir la séparation normale en deux cellules distinctes. Cela aboutit à un gamète avec un ensemble complet de chromosomes, plutôt que la moitié attendue.

* Bonferroni : Une correction statistique.




# Visualisations Basiques

L'ensemble des visualisations ci-dessous s'appuient sur la base de données *TCGA.PAM50_genefu_hg18*. 

```{r, include=FALSE}
#|echo: false
#|output: false
#| warning: false

# chargement des packages nécessaires
library(ggplot2)
library(dplyr)
library(viridis)
library(viridisLite)
library(OmicCircos)
library(hrbrthemes)

# chargement des données
data("TCGA.PAM50_genefu_hg18")
```

### Comparaison de Densités

Commençons par étudier quelques densités des types de cancer. Voici un exemple très basique de visualisation graphique de la **comparaison des densités des types de cancer *LumA* et *LumB*** :

```{r}
# création de la base de données
data <- data.frame(value = c(TCGA.PAM50_genefu_hg18$LumA,
                            TCGA.PAM50_genefu_hg18$LumB),
                   type = c(rep("LumA", 50),
                            rep("LumB", 50)))

# création du graphe
comparaison <- data %>%
    ggplot(aes(x=value, fill=type)) +
    geom_density()

# affichage du graphe
print(comparaison)
```

::: {.callout-important appearance="simple"}
L'utilisation de *ggplot* nécessite la création d'une base de données contenant les variables utiles pour le graphe.
:::

::: {.callout-tip appearance="simple"}
## %>%
Cet opérateur est un pipe, fréquemment représenté par une barre verticale ‘|’ : il renvoie la sortie d’une commande vers l’entrée d’une autre.
:::

De nombreuses options de *ggplot* peuvent améliorer l'apparence générale de ce graphe telles que ci-dessous.

```{r}
# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkblue", "pink")) +
  scale_fill_manual(values = c("darkblue", "pink")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```

Il est également possible de représenter les densités sur deux graphes différents plutôt que de les superposer. 

```{r}
# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkblue", "pink")) +
  scale_fill_manual(values = c("darkblue", "pink")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  facet_wrap(~type, scales = "fixed")+
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```

::: {.callout-note appearance="simple"}
## Utilisation de *facet_wrap*
Les échelles des différents graphiques peuvent être formater différemment à l'aide de l'option *scales* :
*"fixed"* permet d'obtenir des échelles égales pour tous les graphes mais d'autres options telles que *"free_x"*, *"free_y"* ou *"free"* sont envisageables.
:::

Le cancer de type *Her2* est le type de cancer le plus courant parmi tous ceux présents dans la base de données support.

**En vous appuyant sur l'exemple précédent, représentez graphiquement la comparaison des densités d'une personne atteinte d'un cancer de type *Her2* et d'une personne saine.** 

::: {.callout-note appearance="simple"}
Les données d'une personne saine sont contenues dans la variables *Normal* de la base de données.
:::

Par la suite, les couleurs utilisées pour la représentation de *Her2* et *Normal* seront respectivement *darkred* et *darksalmon*.

```{r}
#| code-fold: true
#| code-summary: "Afficher la Solution"
#| output: false

# création de la base de données
data <- data.frame(value = c(TCGA.PAM50_genefu_hg18$Her2,
                            TCGA.PAM50_genefu_hg18$Normal),
                   type = c(rep("Her2", 50),
                            rep("Normal", 50)))

# création du graphe
comparaison <- data %>%
  ggplot(aes(x=value, fill=type)) +
  geom_density(aes(color=type), alpha=0.4) +
  scale_color_manual(values = c("darkred", "darksalmon")) +
  scale_fill_manual(values = c("darkred", "darksalmon")) +
  theme(strip.text.x = element_text(size = 8),
        plot.title = element_text(hjust = 0.5, face="bold")) +
  xlab("Value") +
  ylab("Density") +
  guides(color = "none") +
  labs(title = "Density Comparaison of Cancer Types Gene Occurrence",
       fill = "Cancer Type")

# affichage du graphe
print(comparaison)
```




